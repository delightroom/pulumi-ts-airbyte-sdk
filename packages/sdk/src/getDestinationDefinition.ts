// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDestinationDefinition(args: GetDestinationDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetDestinationDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("airbyte:index/getDestinationDefinition:getDestinationDefinition", {
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDestinationDefinition.
 */
export interface GetDestinationDefinitionArgs {
    workspaceId: string;
}

/**
 * A collection of values returned by getDestinationDefinition.
 */
export interface GetDestinationDefinitionResult {
    readonly dockerImageTag: string;
    readonly dockerRepository: string;
    readonly documentationUrl: string;
    readonly id: string;
    readonly name: string;
    readonly workspaceId: string;
}
export function getDestinationDefinitionOutput(args: GetDestinationDefinitionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDestinationDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("airbyte:index/getDestinationDefinition:getDestinationDefinition", {
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDestinationDefinition.
 */
export interface GetDestinationDefinitionOutputArgs {
    workspaceId: pulumi.Input<string>;
}
