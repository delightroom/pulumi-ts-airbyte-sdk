// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDeclarativeSourceDefinition(args: GetDeclarativeSourceDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetDeclarativeSourceDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("airbyte:index/getDeclarativeSourceDefinition:getDeclarativeSourceDefinition", {
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeclarativeSourceDefinition.
 */
export interface GetDeclarativeSourceDefinitionArgs {
    workspaceId: string;
}

/**
 * A collection of values returned by getDeclarativeSourceDefinition.
 */
export interface GetDeclarativeSourceDefinitionResult {
    readonly id: string;
    readonly manifest: string;
    readonly name: string;
    readonly version: number;
    readonly workspaceId: string;
}
export function getDeclarativeSourceDefinitionOutput(args: GetDeclarativeSourceDefinitionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDeclarativeSourceDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("airbyte:index/getDeclarativeSourceDefinition:getDeclarativeSourceDefinition", {
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeclarativeSourceDefinition.
 */
export interface GetDeclarativeSourceDefinitionOutputArgs {
    workspaceId: pulumi.Input<string>;
}
