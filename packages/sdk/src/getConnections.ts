// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnections(args?: GetConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("airbyte:index/getConnections:getConnections", {
        "includeDeleted": args.includeDeleted,
        "limit": args.limit,
        "offset": args.offset,
        "tagIds": args.tagIds,
        "workspaceIds": args.workspaceIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsArgs {
    includeDeleted?: boolean;
    limit?: number;
    offset?: number;
    tagIds?: string[];
    workspaceIds?: string[];
}

/**
 * A collection of values returned by getConnections.
 */
export interface GetConnectionsResult {
    readonly datas: outputs.GetConnectionsData[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeDeleted?: boolean;
    readonly limit?: number;
    readonly next: string;
    readonly offset?: number;
    readonly previous: string;
    readonly tagIds?: string[];
    readonly workspaceIds?: string[];
}
export function getConnectionsOutput(args?: GetConnectionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConnectionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("airbyte:index/getConnections:getConnections", {
        "includeDeleted": args.includeDeleted,
        "limit": args.limit,
        "offset": args.offset,
        "tagIds": args.tagIds,
        "workspaceIds": args.workspaceIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsOutputArgs {
    includeDeleted?: pulumi.Input<boolean>;
    limit?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    tagIds?: pulumi.Input<pulumi.Input<string>[]>;
    workspaceIds?: pulumi.Input<pulumi.Input<string>[]>;
}
