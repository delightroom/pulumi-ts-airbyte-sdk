// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSourceJustcall(args: GetSourceJustcallArgs, opts?: pulumi.InvokeOptions): Promise<GetSourceJustcallResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("airbyte:index/getSourceJustcall:getSourceJustcall", {
        "sourceId": args.sourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourceJustcall.
 */
export interface GetSourceJustcallArgs {
    sourceId: string;
}

/**
 * A collection of values returned by getSourceJustcall.
 */
export interface GetSourceJustcallResult {
    readonly configuration: string;
    readonly createdAt: number;
    readonly definitionId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly resourceAllocation: outputs.GetSourceJustcallResourceAllocation;
    readonly sourceId: string;
    readonly sourceType: string;
    readonly workspaceId: string;
}
export function getSourceJustcallOutput(args: GetSourceJustcallOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSourceJustcallResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("airbyte:index/getSourceJustcall:getSourceJustcall", {
        "sourceId": args.sourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourceJustcall.
 */
export interface GetSourceJustcallOutputArgs {
    sourceId: pulumi.Input<string>;
}
